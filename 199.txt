class Solution {
public:
    vector<int>ans;
    vector<vector<int>>a;

    void print(TreeNode* root)
    {
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        vector<int>mid;
        while(!q.empty())
        {
            if(q.front()!=NULL)
            {
                TreeNode* temp = q.front();
                q.pop();
                mid.push_back(temp->val);
                if(temp->left)
                {
                    q.push(temp->left);
                }
                if(temp->right)
                {
                    q.push(temp->right);
                }
            }
            else
            {
                q.pop();
                a.push_back(mid);
                if(!q.empty())
                {
                    q.push(NULL);
                    mid.clear();
                }
            }
        }
    }
    vector<int> rightSideView(TreeNode* root) {
        if(root==NULL)
        {
            return ans;
        }
        else
        {
            print(root);
        }
        for(int i=0;i<a.size();i++)
        {
            int val = (a[i].size())-1;
            ans.push_back(a[i][val]);
        }
        return ans;
        
    }
};